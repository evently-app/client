// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Action Button renders correctly 1`] = `
<TouchableOpacity
  activeOpacity={0.9}
  onPressIn={[Function]}
>
  <AnimatedComponent
    style={
      Array [
        Object {
          "bottom": 10,
          "height": 30,
          "position": "absolute",
          "right": 10,
          "width": 112,
        },
        Object {
          "borderRadius": undefined,
          "overflow": "hidden",
          "transform": Array [
            Object {
              "translateX": undefined,
            },
            Object {
              "translateY": undefined,
            },
            Object {
              "scaleX": undefined,
            },
            Object {
              "scaleY": undefined,
            },
          ],
        },
      ]
    }
  >
    <BlurView
      blurAmount={10}
      blurType="xlight"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </AnimatedComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 10,
        "height": 30,
        "justifyContent": "center",
        "position": "absolute",
        "right": 25,
      }
    }
  >
    <SubHeader
      animated={true}
      style={
        Object {
          "color": "black",
          "transform": Array [
            Object {
              "translateX": undefined,
            },
            Object {
              "translateY": undefined,
            },
          ],
        }
      }
    />
  </View>
</TouchableOpacity>
`;

exports[`Description renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(52, 33, 79, 0.95)",
      "height": 1134,
      "padding": 20,
      "width": 730,
    }
  }
>
  <Paragraph />
</View>
`;

exports[`EventCard renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(21,2,24,0.95)",
      "borderRadius": 20,
      "height": 1154,
      "overflow": "hidden",
      "width": 730,
    }
  }
>
  <AnimatedComponent
    bounces={false}
    onScroll={[Function]}
    scrollEventThrottle={16}
    showsVerticalScrollIndicator={false}
  >
    <Image
      source={
        Object {
          "uri": undefined,
        }
      }
      style={
        Object {
          "alignItems": "center",
          "height": 1134,
          "justifyContent": "center",
          "width": 730,
        }
      }
    />
    <LinearGradient
      colors={
        Array [
          "rgba(0,0,0,0.7)",
          "rgba(0,0,0,0.1)",
        ]
      }
      end={
        Object {
          "x": 0.5,
          "y": 1,
        }
      }
      locations={
        Array [
          0,
          0.1,
        ]
      }
      start={
        Object {
          "x": 0.5,
          "y": 0,
        }
      }
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      style={
        Object {
          "padding": 10,
          "position": "absolute",
        }
      }
    >
      <Header />
      <SubHeader>
        Mon April 22nd 7:30 pm
      </SubHeader>
    </View>
    <MapView
      logoEnabled={false}
      onDidFinishLoadingMap={[Function]}
      showUserLocation={true}
      style={
        Object {
          "backgroundColor": "white",
          "height": 200,
        }
      }
      styleURL={null}
    >
      <PointAnnotation
        coordinate={
          Array [
            NaN,
            NaN,
          ]
        }
        id="coord"
      />
    </MapView>
    <Description />
  </AnimatedComponent>
  <ActionButton
    title="Get Tickets"
    yOffset={0}
  />
  <View
    style={
      Object {
        "backgroundColor": "gray",
        "borderRadius": 2.5,
        "height": 100,
        "position": "absolute",
        "right": 10,
        "top": 10,
        "width": 5,
      }
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "lightgray",
            "borderRadius": 2.5,
            "height": 20,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 5,
          },
          Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        ]
      }
    />
  </View>
</View>
`;
